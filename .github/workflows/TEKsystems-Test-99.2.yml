name: Build and Integration Test - TEKsystem

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # 🔧 Bygg delprojekten i rätt ordning
    - name: Build all projects
      run: |
        dotnet build ThreadPilot_DataModels/ThreadPilot_DataModels.csproj --configuration Release
        dotnet build ThreadPilot_Costs/ThreadPilot_Costs.csproj --configuration Release
        dotnet build ThreadPilot_Databases/ThreadPilot_Vehicles_Databases.csproj --configuration Release
        dotnet build ThreadPilot_Customers_Database/ThreadPilot_Customers_Database.csproj --configuration Release
        dotnet build WebApplication_TEKsystem-Test/WebApplication_TEKsystem-Test.csproj --configuration Release
        dotnet build WebApplication_TEKsystem-Test-B/WebApplication_TEKsystem-Test-B.csproj --configuration Release
        dotnet build ConsoleApp-Test-API/ConsoleApp-Test-API.csproj --configuration Release

    # 🚀 Starta API:er och kör integrationstester
    - name: Start APIs and run integration tests
      shell: pwsh
      run: |
        # Starta API:erna i bakgrunden med HTTP och logga utdata
        Write-Host "🚀 Startar API:erna..."
        Start-Process "dotnet" "run --no-build --project WebApplication_TEKsystem-Test/WebApplication_TEKsystem-Test.csproj --urls http://localhost:7077" -RedirectStandardOutput api1.log -RedirectStandardError api1.err -NoNewWindow
        Start-Process "dotnet" "run --no-build --project WebApplication_TEKsystem-Test-B/WebApplication_TEKsystem-Test-B.csproj --urls http://localhost:7240" -RedirectStandardOutput api2.log -RedirectStandardError api2.err -NoNewWindow

        # Vänta på att båda API:erna ska svara på /health
        $urls = @("http://localhost:7077/health", "http://localhost:7240/health")
        foreach ($url in $urls) {
          Write-Host "🔄 Väntar på $url..."
          $success = $false
          for ($i = 0; $i -lt 20; $i++) {
            try {
              $response = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 2
              if ($response.StatusCode -eq 200) {
                Write-Host "✅ $url är uppe!"
                $success = $true
                break
              }
            } catch {
              Write-Host "⏳ $url svarar inte än, försöker igen..."
              Start-Sleep -Seconds 2
            }
          }
          if (-not $success) {
            Write-Host "❌ $url svarade inte i tid"
            break
          }
        }

        # 🧪 Kör integrationstesterna
        Write-Host "🚀 Startar integrationstester..."
        dotnet run --no-build --project ConsoleApp-Test-API/ConsoleApp-Test-API.csproj --configuration Release

        # 📄 Visa loggar oavsett resultat
        Write-Host "`n📄 API 1 - STDOUT:"
        Get-Content api1.log
        Write-Host "`n📄 API 1 - STDERR:"
        Get-Content api1.err
        Write-Host "`n📄 API 2 - STDOUT:"
        Get-Content api2.log
        Write-Host "`n📄 API 2 - STDERR:"
        Get-Content api2.err
